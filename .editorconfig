###############################################################################
# EditorConfig is awesome: http://EditorConfig.org
###############################################################################

###############################################################################
# Top-most EditorConfig file
###############################################################################
root = true

###############################################################################
# Set default behavior to:
#   a UTF-8 encoding,
#   a newline ending the file,
#   4 space indentation, and
#   trimming of trailing whitespace
###############################################################################
[*]
charset = utf-8
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

###############################################################################
# Set file behavior to:
#   2 space indentation
###############################################################################
[*.{cmd,config,csproj,json,props,ps1,resx,sh,targets}]
indent_size = 2

###############################################################################
# Set file behavior to:
#   Windows-style line endings, and
#   tabular indentation
###############################################################################
[*.sln]
end_of_line = crlf
indent_style = tab

###############################################################################
# Set file behavior to:
#   Unix-style line endings
###############################################################################
[*.sh]
end_of_line = lf

###############################################################################
# Set dotnet naming rules to:
#    suggest async members be pascal case suffixed with Async
#    suggest interfaces be pascal case prefixed with I
#    suggest const declarations be pascal case
#    suggest static readonly declarations be pascal case
#    suggest private and internal fields be camel case and prefixed with underscore
#    suggest public and protected declarations be pascal case
###############################################################################
[*.cs]
dotnet_naming_rule.async_members_should_be_pascal_case_suffixed_with_async.severity = suggestion
dotnet_naming_rule.async_members_should_be_pascal_case_suffixed_with_async.style = pascal_case_suffixed_with_async
dotnet_naming_rule.async_members_should_be_pascal_case_suffixed_with_async.symbols = async_members

dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.severity = suggestion
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.style = pascal_case_prefixed_with_i
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.symbols = interfaces

dotnet_naming_rule.const_declarations_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.const_declarations_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.const_declarations_should_be_pascal_case.symbols = const_declarations

dotnet_naming_rule.static_readonly_declarations_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_readonly_declarations_should_be_pascal_case.style = camel_case_prefixed_with_underscore
dotnet_naming_rule.static_readonly_declarations_should_be_pascal_case.symbols = static_readonly_declarations

dotnet_naming_rule.private_and_internal_fields_should_be_camel_case_prefixed_with_underscore.severity = suggestion
dotnet_naming_rule.private_and_internal_fields_should_be_camel_case_prefixed_with_underscore.style = camel_case_prefixed_with_underscore
dotnet_naming_rule.private_and_internal_fields_should_be_camel_case_prefixed_with_underscore.symbols = private_and_internal_fields

dotnet_naming_rule.public_and_protected_declarations_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_and_protected_declarations_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.public_and_protected_declarations_should_be_pascal_case.symbols = public_and_protected_declarations

###############################################################################
# Set dotnet naming styles to define:
#   camel case prefixed with _
#   pascal case
#   pascal case prefixed with I
#   pascal case suffixed with Async
###############################################################################
[*.cs]
dotnet_naming_style.camel_case_prefixed_with_underscore.capitalization = camel_case
dotnet_naming_style.camel_case_prefixed_with_underscore.required_prefix = _

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case_prefixed_with_i.capitalization = pascal_case
dotnet_naming_style.pascal_case_prefixed_with_i.required_prefix = I

dotnet_naming_style.pascal_case_suffixed_with_async.capitalization = pascal_case
dotnet_naming_style.pascal_case_suffixed_with_async.required_suffix = Async

###############################################################################
# Set dotnet naming symbols to:
#   async members
#   private and internal fields
#   public and protected declarations
###############################################################################
[*.cs]
dotnet_naming_symbols.async_members.required_modifiers = async

dotnet_naming_symbols.const_declarations.required_modifiers = const

dotnet_naming_symbols.interfaces.applicable_kinds = interface

dotnet_naming_symbols.private_and_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_symbols.private_and_internal_fields.applicable_kinds = field

dotnet_naming_symbols.public_and_protected_declarations.applicable_accessibilities = public, protected

dotnet_naming_symbols.static_readonly_declarations.required_modifiers = static, readonly

###############################################################################
# Set dotnet sort options to:
#   separate import directives into groups, and
#   sort system directives first
###############################################################################
[*.cs]
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

###############################################################################
# Set dotnet style options to:
#   suggest null-coalescing expressions,
#   suggest collection-initializers,
#   suggest explicit tuple names,
#   suggest null-propogation
#   suggest object-initializers,
#   suggest predefined-types for locals, parameters, and members,
#   suggest predefined-types  of type names for member access,
#   suggest 'is null' checks over '== null',
#   don't suggest 'this.' and 'Me.' for events,
#   don't suggest 'this.' and 'Me.' for fields,
#   don't suggest 'this.' and 'Me.' for methods,
#   don't suggest 'this.' and 'Me.' for properties, and
#   suggest specifying accessibility modifiers
###############################################################################
[*.cs]
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion

dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

dotnet_style_require_accessibility_modifiers = always:suggestion

###############################################################################
# Set csharp indent options to:
#   indent block contents,
#   not indent braces,
#   not indent case contents,
#   indent labels one less than the current, and
#   indent switch labels
###############################################################################
[*.cs]
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

###############################################################################
# Set csharp new-line options to:
#   insert a new-line before "catch",
#   insert a new-line before "else",
#   insert a new-line before "finally",
#   insert a new-line before members in anonymous-types,
#   insert a new-line before members in object-initializers,
#   insert a new-line before all open braces except anonymous methods, anonymous types, lambdas, and object collections and
#   insert a new-line within query expression clauses
###############################################################################
[*.cs]
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true

csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true

csharp_new_line_before_open_brace = accessors, control_blocks, events, indexers, local_functions, methods, properties, types

csharp_new_line_within_query_expression_clauses = true

###############################################################################
# Set csharp preserve options to:
#   preserve single-line blocks, and
#   not preserve single-line statements
###############################################################################
[*.cs]
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

###############################################################################
# Set csharp space options to:
#   not preserve single-line blocks,
#   not preserve single-line statements,
#   remove any space after a cast,
#   add a space after the colon in an inheritance clause,
#   add a space after a comma,
#   remove any space after a dot,
#   add a space after keywords in control flow statements,
#   add a space after a semicolon in a "for" statement,
#   add a space before and after binary operators,
#   remove space around declaration statements,
#   add a space before the colon in an inheritance clause,
#   remove any space before a comma,
#   remove any space before a dot,
#   remove any space before an open square-bracket,
#   remove any space before a semicolon in a "for" statement,
#   remove any space between empty square-brackets,
#   remove any space between a method call's empty parameter list parenthesis,
#   remove any space between a method call's name and its opening parenthesis,
#   remove any space between a method call's parameter list parenthesis,
#   remove any space between a method declaration's empty parameter list parenthesis,
#   remove any space between a method declaration's name and its openening parenthesis,
#   remove any space between a method declaration's parameter list parenthesis,
#   remove any space between parentheses, and
#   remove any space between square brackets
###############################################################################
[*.cs]
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true

csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore

csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false

csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

###############################################################################
# Set csharp style options to:
#   suggest braces,
#   suggest inferred anonymous types,
#   suggest inferred tuple names,
#   suggest simple default expressions,
#   suggest a preferred modifier order,
#   don't use expression body constructors
#   suggest conditional delegate calls,
#   suggest inlined variable declarations,
#   suggest local over anonymous functions,
#   suggest pattern-matching over "as" with "null" check,
#   suggest pattern-matching over "is" with "cast" check,
#   suggest throw expressions,
#   suggest var for built-in types,
#   suggest var when the type is not apparent, and
#   suggest var when the type is apparent
###############################################################################
[*.cs]
csharp_prefer_braces = true:suggestion
csharp_prefer_inferred_anonymous_type_member_names = true:suggestion
csharp_prefer_inferred_tuple_names = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

csharp_style_conditional_delegate_call = true:suggestion

csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

csharp_style_inlined_variable_declaration = true:suggestion

csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

csharp_style_throw_expression = true:suggestion

csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
