variables:
  - name: _TeamName
    value: DotNetCore
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: Codeql.Enabled
    value: true

# CI and PR triggers
trigger:
  batch: true
  branches:
    include:
    - main

pr:
  autoCancel: false
  branches:
    include:
    - '*'

stages:
- stage: build
  displayName: Build and Test
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enablePublishUsingPipelines: true
      enablePublishTestResults: true
      enablePublishBuildAssets: true
      enableTelemetry: true
      enableSourceBuild: true
      helixRepo: dotnet/command-line-api
      timeoutInMinutes: 180 # increase timeout since BAR publishing might wait a long time
      jobs:
      - job: Windows
        pool:
          name: NetCore-Public
          demands: ImageOverride -equals windows.vs2022.amd64.open
        variables:
        - name: _OfficialBuildArgs
          value: ''
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              Debug:
                _BuildConfig: Debug
                _SignType: test
                _BuildArgs:

            Release:
              _BuildConfig: Release
              _SignType: test
        steps:
        - checkout: self
          clean: true
        - script: eng\common\cibuild.cmd
            -configuration $(_BuildConfig)
            -prepareMachine
            $(_BuildArgs)
          displayName: Build and Publish
        - task: PublishBuildArtifacts@1
          displayName: Upload package artifacts
          condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
          inputs:
            pathtoPublish: artifacts/packages/
            artifactName: artifacts
            artifactType: Container
            parallel: true
        - task: PublishBuildArtifacts@1
          displayName: Publish Artifact Symbols
          condition: and(eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)\artifacts\SymStore\$(_BuildConfig)'
            ArtifactName: 'NativeSymbols'

      - job: Ubuntu
        displayName: Ubuntu
        pool:
          name: NetCore-Svc-Public
          demands: ImageOverride -equals 1es-ubuntu-2004-open
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              Debug:
                _BuildConfig: Debug
                _SignType: none
            Release:
              _BuildConfig: Release
              _SignType: none
        steps:
        - checkout: self
          clean: true
        - bash: |
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            sudo apt-add-repository "deb https://apt.llvm.org/focal/ llvm-toolchain-focal-9 main"
            sudo apt-get update
        - bash: |
            sudo apt-get install cmake clang-9 libicu66 uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev
        - script: eng/common/cibuild.sh
            --configuration $(_BuildConfig)
            --prepareMachine
          displayName: Build

      - job: MacOS
        displayName: MacOS
        pool:
          vmImage: macOS-latest
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              Debug:
                _BuildConfig: Debug
                _SignType: none
                _DotNetPublishToBlobFeed : false
            Release:
              _BuildConfig: Release
              _SignType: none
              _DotNetPublishToBlobFeed : false
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh
            --configuration $(_BuildConfig)
            --prepareMachine
          displayName: Build
